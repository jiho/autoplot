% Generated by roxygen2 (4.0.2): do not edit by hand
\name{fortify_pca}
\alias{fortify.PCA}
\alias{fortify.pca}
\alias{fortify.pcaRes}
\alias{fortify.prcomp}
\alias{fortify.rda}
\alias{fortify_pca}
\title{}
\usage{
\method{fortify}{prcomp}(model, data = NULL, type = "observations",
  PC = c(1, 2), scaling = "auto", ...)

\method{fortify}{PCA}(model, data = NULL, type = "observations", PC = c(1,
  2), scaling = "auto", ...)

\method{fortify}{pca}(model, data = NULL, type = "observations", PC = c(1,
  2), scaling = "auto", ...)

\method{fortify}{pcaRes}(model, data = NULL, type = "observations",
  PC = c(1, 2), scaling = "auto", ...)

\method{fortify}{rda}(model, data = NULL, type = "observations", PC = c(1,
  2), scaling = "auto", ...)
}
\arguments{
\item{model}{an object resulting from a PCA}

\item{data}{the original dataset, to be concatenated to the output when extracting observations. Whhen \code{NULL}, the default, data will be extracted from the PCA object when it contains it (i.e. not for \code{\link{prcomp}})}

\item{type}{the elements to consider: either "observations", "individuals", "sites", "lines" (which are all synonyms) or "variables", "descriptors", "species", "columns" (which are, again, synonyms)}

\item{PC}{the principal components to extract; two is usual for plotting}

\item{scaling}{how to scale scores. Can be "none", "obs", "var", "both" (or synonyms of "obs" and "var", as for the argument \code{type}). Can also be a integer from 0 to 3, which designs a scaling as in the order above (0="none", 1="obs", etc.). Scaling observations makes the distances in the plot of observations approximations of the euclidan distance in the original space. Scaling variables relates the angle between variables to the correlations between them (right angle = no correlation). Scaling of observation or variables is by the square root of the eigenvalues. Scaling both is by the fourth root of the eigenvalues.
TODO add a note about auto scaling}

\item{...}{pass-through argument}
}
\value{
A data.frame containing the original data, when it is supplied or can be extracted from the object, and the additional columns
  \item{.id}{the identifier of the observation (row name) or variable (column name)}
  \item{.PC#}{the scores of observations or variables on the extracted principal components}
  \item{.cos2}{the squared cosine summed over all extracted PCs}
  \item{.contrib}{the contribution to the selected PCs}
  \item{.kind}{the nature of the data extracted : observations, variables and possibly their status (active or supplementary)}
}
\description{

}
\examples{
# PCA with stats::prcomp
pca <- prcomp(USArrests, scale = TRUE)
# extract scores of the observations
head(fortify(pca))
fortify(pca, type = "variables")
# data is not containe in the `prcomp` object but can be provided
head(fortify(pca, data = USArrests, type = "observations"))
# select different principal components
fortify(pca, type = "var", PC=c(1,3))

\dontrun{
# PCA with FactoMineR::PCA
library("FactoMineR")
# add a missing value
d <- USArrests
d[1,2] <- NA
# use supplementary observations and variables
pca <- PCA(d, scale = TRUE, graph = FALSE, ind.sup = 2, quanti.sup = 4)
# the missing value is replaced by the column mean in the PCA object
# the supplementary observation is identified as such
head(fortify(pca, data = d))
head(fortify(pca))
# the supplementary variable is identified as such
fortify(pca, type = "variables")

# PCA with ad4::dudi.pca
library("ade4")
pca <- dudi.pca(USArrests, scannf=FALSE)
head(fortify(pca))
head(fortify(pca, type = "variables"))

# PCA with vegan::rda
library("vegan")
pca <- rda(USArrests, scale = TRUE)
# can use vegan's naming convention
head(fortify(pca, type = "sites"))
head(fortify(pca, type = "species"))

# PCA with pcaMethods::pca, from bioconductor
library("pcaMethods")
pca <- pca(d, method = "nipals", scale = "uv", completeObs = TRUE, nPcs = 4)
# the missing value is imputed by iterative PCA
head(fortify(pca))
fortify(pca, type = "var")

}
}
\author{
Jean-Olivier Irisson \email{irisson@normalesup.org}
}
\seealso{
\code{\link{autoplot_pca}} to produce plots based on the output of \code{fortify}.

\code{\link{prcomp}} in package \code{stats}, \code{\link[FactoMineR:PCA]{PCA}} in package \code{factoMineR}, \code{\link[ade4:dudi.pca]{dudi.pca}} in package \code{ade4}, \code{\link[vegan:rda]{rda}} in package \code{vegan},   \code{\link[pcaMethods:pca]{pca}} in package \code{pcaMethods} from bioconductor.
}

